const adbCommander =  require('../index')
const chai = require('chai')

const assert = chai.assert

describe('ADBCommander测试', () => {

  it('测试 deviceList install isInstalled', (done) => {

		// test deviceList
    adbCommander.deviceList().then(({ deviceList, err }) => {
      console.log(deviceList)
      if(err || !deviceList[0]){
        console.log('没有检测到手机插入')
        done()
        return
      }

      // test isInstalled
      adbCommander.isInstalled(deviceList[0], 'org.hapjs.debugger').then(({ isInstalled, err }) => {
        if (isInstalled) {
          console.log('已经安装')

          // test uninstall
          adbCommander.uninstall(deviceList[0], 'org.hapjs.debugger').then(({ result, err }) => {
            console.log('完成卸载 ', {result, err})
            assert.strictEqual(err, undefined, '卸载')
            console.log(result)

            //test install
            adbCommander.install(deviceList[0], process.cwd() + '/test/quickapp_debugger.apk').then((result) => {
              console.log('测试安装', result)
              assert.strictEqual(err, undefined, '安装')
              done()
            })
          })
        }else {
          //test install
          adbCommander.install(deviceList[0], process.cwd() + '/test/quickapp_debugger.apk').then((result) => {
            console.log('测试安装', result)

            adbCommander.isInstalled(deviceList[0], 'org.hapjs.debugger').then(({ isInstalled, err }) => {
              console.log('测试检测安装', { isInstalled, err })
              if (!isInstalled) {
                done()
                return
              }

              assert.strictEqual(isInstalled, true, '安装')

              // test uninstall
              adbCommander.uninstall(deviceList[0], 'org.hapjs.debugger').then(({result, err}) => {
                console.log('完成卸载 ', {result, err})
                assert.strictEqual(err, undefined, '卸载')
                console.log(result)
                done()
              })
            })
          })

        }
      })
    })
  })
  it('startActivity', (done) => {
    adbCommander.deviceList().then(({ deviceList, err }) => {
      console.log(deviceList)
      if (err || !deviceList[0]) {
        console.log('没有检测到手机插入')
        done()
        return
      }
      adbCommander.startActivity(deviceList[0],
        'org.hapjs.debugger.action.MAIN',
        'org.hapjs.debugger/org.hapjs.debugger.MainActivity',
        [{ key: "debug", type: "boolean", value: true }]
      ).then(({ result, err }) => {
        console.log('start activity result:', { result, err })
        done()
      })
    })
  })

  it('exeCommand', (done) => {
    adbCommander.exeCommand('adb devices').then(({ result, err }) => {
      assert.strictEqual(err, undefined, '执行adb devices 成功')
      console.log('exeCommand("adb devices") result:  ', { result, err })
      done()
    })
  })
})

