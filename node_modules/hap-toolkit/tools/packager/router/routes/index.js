"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function asyncGeneratorStep(e,r,t,n,o,a,i){try{var s=e[a](i),c=s.value}catch(e){return void t(e)}s.done?r(c):Promise.resolve(c).then(n,o)}function _asyncToGenerator(e){return function(){var r=this,t=arguments;return new Promise(function(n,o){function a(e){asyncGeneratorStep(s,n,o,a,i,"next",e)}function i(e){asyncGeneratorStep(s,n,o,a,i,"throw",e)}var s=e.apply(r,t);a(void 0)})}}function index(e,r){return _index.apply(this,arguments)}function _index(){return _index=_asyncToGenerator(regeneratorRuntime.mark(function e(r,t){var n,o,a;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return n=r.app.server.address().port,o=(0,_service.getServerAddress)(n),a=_qrImage.default.image(o,{size:9}),r.type="image/png",r.body=a,e.next=7,t();case 7:case"end":return e.stop()}},e,this)})),_index.apply(this,arguments)}function bundle(e,r){return _bundle.apply(this,arguments)}function _bundle(){return _bundle=_asyncToGenerator(regeneratorRuntime.mark(function e(r,t){var n,o,a,i,s;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return n=process.cwd(),o=(0,_service.getProjectName)(),a=_path.default.join(n,"dist"),i=_path.default.join(a,"".concat(o,".debug.rpk")),s=_path.default.join(a,"".concat(o,".release.rpk")),_fs.default.existsSync(i)?(r.body=_fs.default.createReadStream(i),r.set("Content-Type","application/octet-stream")):_fs.default.existsSync(s)?(r.body=_fs.default.createReadStream(s),r.set("Content-Type","application/octet-stream")):(_utils.colorconsole.error("### App Server ### 项目dist目录下不存在rpk文件：".concat(a)),r.throw("404","无法找到项目的rpk文件")),e.next=8,t();case 8:case"end":return e.stop()}},e,this)})),_bundle.apply(this,arguments)}function logger(e,r){return _logger.apply(this,arguments)}function _logger(){return _logger=_asyncToGenerator(regeneratorRuntime.mark(function e(r,t){var n,o,a,i,s,c;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:e.prev=0,n=r.conf.defaults.pathClientLog,o=(0,_service.getClientFromRequest)(r.request),a=o.sn,i=o.clientIp,s=o.linkMode,c={sn:a,ip:i,port:CLIENT_PORT},e.t0=s,e.next=e.t0===_service.LINK_MODE.WIFI?7:e.t0===_service.LINK_MODE.ADB?10:13;break;case 7:return _utils.colorconsole.info("### App Server ### 记录从".concat(i,"进入的HTTP请求")),(0,_service.recordClient)(n,c),e.abrupt("break",13);case 10:return c=(0,_service.getRecordClient)(n,a,i),c?(_utils.colorconsole.info("### App Server ### 记录从设备(".concat(a,")进入的HTTP请求")),(0,_service.recordClient)(n,c)):_utils.colorconsole.warn("### App Server ### ：记录设备(".concat(a,")失败")),e.abrupt("break",13);case 13:return e.next=15,t();case 15:e.next=20;break;case 17:e.prev=17,e.t1=e.catch(0),_utils.colorconsole.error("### App Server ### 记录log出错: ".concat(e.t1.message));case 20:case"end":return e.stop()}},e,this,[[0,17]])})),_logger.apply(this,arguments)}function qrCode(e,r){return _qrCode.apply(this,arguments)}function _qrCode(){return _qrCode=_asyncToGenerator(regeneratorRuntime.mark(function e(r,t){var n,o,a;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return n=r.app.server.address().port,o=(0,_service.getServerAddress)(n),a=_qrImage.default.image(o,{size:9}),e.next=5,t();case 5:r.type="image/png",r.body=a;case 7:case"end":return e.stop()}},e,this)})),_qrCode.apply(this,arguments)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.logger=logger,exports.default=void 0;var _fs=_interopRequireDefault(require("fs")),_path=_interopRequireDefault(require("path")),_qrImage=_interopRequireDefault(require("qr-image")),_service=require("../service"),_utils=require("../lib/utils"),CLIENT_PORT=39517,_default={index:index,bundle:bundle,qrCode:qrCode,logger:logger};exports.default=_default;