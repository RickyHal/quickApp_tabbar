"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function asyncGeneratorStep(e,r,t,a,o,u,n){try{var i=e[u](n),s=i.value}catch(e){return void t(e)}i.done?r(s):Promise.resolve(s).then(a,o)}function _asyncToGenerator(e){return function(){var r=this,t=arguments;return new Promise(function(a,o){function u(e){asyncGeneratorStep(i,a,o,u,n,"next",e)}function n(e){asyncGeneratorStep(i,a,o,u,n,"throw",e)}var i=e.apply(r,t);u(void 0)})}}function applyRouter(e){var r=new _koaRouter.default;return r.conf=(0,_conf.init)(__dirname),e.context.router=r,e.use(_routes.default.redirectHtmlReq),e.use((0,_koaStatic.default)(r.conf.staticDir)),r.get(_api.default.index,_routes.default.index),r.post(_api.default.index,(0,_koaBody.default)(),_routes.default.adapterForBackwardComp),r.post(_api.default.register,(0,_koaBody.default)(),_routes.default.register),r.post(_api.default.startDebug,(0,_koaBody.default)(),_routes.default.startDebug),r.get(_api.default.qrCode,_routes.default.qrCode),r}function beforeStart(e,r){return _beforeStart.apply(this,arguments)}function _beforeStart(){return _beforeStart=_asyncToGenerator(regeneratorRuntime.mark(function e(r,t){var a;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,(0,_service.prepareStartServer)(t);case 2:return e.next=4,(0,_wsserver.createSocketServer)(r,t);case 4:a=(0,_service.serverConf)(t.context),t.context.adbDebugger=(0,_adb.createADBDebugger)({pathClientLog:a.defaults.pathClientLog,localReversePort:a.defaults.serverPort});case 6:case"end":return e.stop()}},e,this)})),_beforeStart.apply(this,arguments)}var _koaRouter=_interopRequireDefault(require("koa-router")),_koaBody=_interopRequireDefault(require("koa-body")),_koaStatic=_interopRequireDefault(require("koa-static")),_conf=require("./lib/conf"),_api=_interopRequireDefault(require("./api")),_routes=_interopRequireDefault(require("./routes")),_service=require("./service"),_wsserver=require("./wsserver"),_adb=require("../adb");module.exports={applyRouter:applyRouter,beforeStart:beforeStart};